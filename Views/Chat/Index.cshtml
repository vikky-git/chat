@model List<ChatApp.Models.User>
@{
    ViewBag.Title = "Chat App";
    int currentUserId = (int)ViewBag.CurrentUserId;
}

<link href="https://cdn.jsdelivr.net/npm/bootstrap@4.6.1/dist/css/bootstrap.min.css" rel="stylesheet" />
@*<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>*@
<script src="~/Scripts/jquery-1.6.4.min.js"></script>
<script src="~/Scripts/jquery.signalR-2.4.3.min.js"></script>
<script src="/signalr/hubs"></script>
<style>
    .unread-count {
        margin-left: 8px;
        font-size: 0.8em;
        padding: 2px 6px;
        border-radius: 12px;
        color: white;
        background-color: red;
    }
    #msgNotification {
        padding: 10px;
        border-radius: 8px;
        font-weight: bold;
    }
    .unread-badge {
        margin-left: 10px;
        font-size: 0.75rem;
        padding: 4px 8px;
        border-radius: 50%;
        background-color: red;
        color: white;
    }
    .user-item.selected {
        background-color: #e6f3ff; /* light blue */
        font-weight: bold;
        border-left: 4px solid #007bff;
    }
</style>
<div class="container mt-4">
    <div class="row">
        <div class="col-md-4">
            <h5>Select User</h5>
            @*<ul class="list-group">
                @foreach (var user in Model)
                {
                    <li class="list-group-item user-item" data-id="@user.UserId">@user.UserName</li>
                }
            </ul>*@
        <ul id="userList">
            @foreach (var user in Model)
            {
                <li class="user-item" data-id="@user.UserId">
                    @user.UserName
                    <span class="unread-badge badge bg-danger" style="display:none;">0</span>
                </li>
                }
                <!-- Repeat for other users -->
            </ul>

        </div>
        <div class="col-md-8">
            <h5>Chat</h5>
            <div id="msgNotification" style="display:none;" class="alert alert-info"></div>
            <div id="msgNotification" class="alert alert-info" style="display:none; cursor:pointer;"></div>
            <div id="chatWindow" class="border p-2 mb-2" style="height: 300px; overflow-y: scroll;"></div>
            <input type="text" id="txtMessage" class="form-control" placeholder="Type your message..." />
            <button id="btnSend" class="btn btn-primary mt-2">Send</button>
        </div>
    </div>
</div>

<script>
    var chat = $.connection.chatHub;
    var selectedUserId = 0;
    var currentUserId = @currentUserId;

    // 🛠 Register receive handler FIRST
    chat.client.receiveMessage = function (senderId, message) {
        debugger;
        var direction = senderId === currentUserId ? 'You' : '';
        var align = senderId === currentUserId ? 'text-right text-primary' : 'text-left text-success';

        // Only show message if the currently selected chat is with the sender
        if (senderId === selectedUserId || senderId === currentUserId) {
            $("#chatWindow").append(`<div class="${align}"><strong>${direction}:</strong> ${message}</div>`);
        }
        //// 🔔 Show notification if chat is not open with sender
        //if (senderId !== currentUserId && senderId !== selectedUserId) {
        //    const senderName = $(`.user-item[data-id='${senderId}']`).text().trim();
        //    $("#msgNotification").text(`🔔 New message from ${senderName}`).fadeIn();

        //    // Optionally hide after few seconds
        //    setTimeout(() => {
        //        $("#msgNotification").fadeOut();
        //    }, 5000);
        //}

        // 📌 Increment unread badge if chat is NOT open with sender
        if (senderId !== currentUserId && senderId !== selectedUserId) {
            const userItem = $(`.user-item[data-id="${senderId}"]`);
            const badge = userItem.find(".unread-badge");

            let count = parseInt(badge.text()) || 0;
            count++;
            badge.text(count).show();
        }
        
    };

    // THEN start the hub
    $(function () {
        $.connection.hub.start().done(function () {
            chat.server.connect(currentUserId);
            console.log("SignalR connected for user: " + currentUserId);

            $(".user-item").click(function () {
                selectedUserId = $(this).data("id");
                $("#chatWindow").append(`<div class="text-muted">Chatting with: <strong>${$(this).text()}</strong></div>`);
            });

            $("#btnSend").click(function () {
                var msg = $("#txtMessage").val();
                if (selectedUserId && msg.trim() !== "") {
                    chat.server.sendMessage(currentUserId, selectedUserId, msg);
                    $("#txtMessage").val('');
                    $("#chatWindow").append(`<div class="text-right text-primary"><strong>You:</strong> ${msg}</div>`);
                   
                }
            });
        });
    });

    //$("#msgNotification").off("click").on("click", function () {
    //    $(".user-item[data-id='" + senderId + "']").click(); // open chat with that user
    //    $(this).hide();
    //});
    ////comment yhis code foe show history
    //$(".user-item").click(function () {
    //    // Get selected user
    //    selectedUserId = $(this).data("id");

    //    // Clear their unread badge
    //    $(this).find(".unread-badge").text("0").hide();

    //    $("#chatWindow").append(`<div class="text-muted">Chatting with: <strong>${$(this).text().trim()}</strong></div>`);
    //});
    $(".user-item").click(function () {
        selectedUserId = $(this).data("id");
        // 🔹 Highlight selected, remove from others
        $(".user-item").removeClass("selected");
        $(this).addClass("selected");
        $("#chatWindow").html(`<div class="text-muted">Chatting with: <strong>${$(this).text().trim()}</strong></div>`);

        // Reset unread count
        $(this).find(".unread-badge").text("0").hide();

        // Load messages from DB
        $.get("/Chat/GetChatHistory", { currentUserId: currentUserId, selectedUserId: selectedUserId }, function (messages) {
            messages.forEach(msg => {
                const direction = msg.SenderId === currentUserId ? 'You' : 'Friend';
                const align = msg.SenderId === currentUserId ? 'text-right text-primary' : 'text-left text-success';
                $("#chatWindow").append(`<div class="${align}"><strong>${direction}:</strong> ${msg.Message}</div>`);
            });

            // Show any local unread messages (if stored client-side)
            if (unreadMessages[selectedUserId]) {
                unreadMessages[selectedUserId].forEach(msg => {
                    $("#chatWindow").append(`<div class="text-left text-success"><strong>Friend:</strong> ${msg.message}</div>`);
                });
                unreadMessages[selectedUserId] = [];
            }
        });
    });


</script>

